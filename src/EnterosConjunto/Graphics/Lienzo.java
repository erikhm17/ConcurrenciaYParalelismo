/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EnterosConjunto.Graphics;


import java.awt.*;
import java.util.ArrayList;

/**
 * @author Erik
 */
public class Lienzo extends javax.swing.JPanel implements Runnable {
    ArrayList<Numero> numerosProcesoA = new ArrayList<>();
    ArrayList<Numero> numerosProcesoB = new ArrayList<>();

    public Lienzo() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 942, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 518, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void paint(Graphics g) {
        /* color del fondo*/
        g.setColor(new Color(53, 53, 53));
        /* tama√±o del fondo*/
        g.fillRect(0, 0, getWidth(), getHeight());

        g.setColor(Color.WHITE);

        /** para el proceso A */
        g.drawString("PROCESO A ", 120, 160);
        g.fillRect(100, 200, 100, 10);
        g.fillRect(100, 200, 10, 200);

        g.fillRect(200, 200, 10, 210);
        g.fillRect(100, 400, 100, 10);


        /** para el proceso B */
        g.drawString("PROCESO B ", 420, 160);
        g.fillRect(400, 200, 100, 10);
        g.fillRect(400, 200, 10, 200);

        g.fillRect(500, 200, 10, 210);
        g.fillRect(400, 400, 100, 10);


        /**
         *  (X,Y,Ancho,Alto)
         * */
        for (int i = 0; i < this.numerosProcesoA.size(); i++) {
            numerosProcesoA.get(i).setG(g);
            g.drawString(String.valueOf(
                    numerosProcesoA.get(i).getValor()),
                    numerosProcesoA.get(i).getCoordenadaX(),
                    numerosProcesoA.get(i).getCoordenadaY()
            );

        }

        for (int i = 0; i < this.numerosProcesoB.size(); i++) {
            numerosProcesoB.get(i).setG(g);
            g.drawString(String.valueOf(
                    numerosProcesoB.get(i).getValor()),
                    numerosProcesoB.get(i).getCoordenadaX(),
                    numerosProcesoB.get(i).getCoordenadaY()
            );

        }


    }

    public void generarNumeroProcesoA() {
        numerosProcesoA.add(new Numero(0, 10, 150, 250, null, this));
        numerosProcesoA.add(new Numero(1, 20, 150, 280, null, this));
        numerosProcesoA.add(new Numero(2, 30, 150, 310, null, this));
        numerosProcesoA.add(new Numero(3, 40, 150, 340, null, this));
        numerosProcesoA.add(new Numero(4, 50, 150, 370, null, this));

    }

    public void generarNumeroProcesoB() {
        numerosProcesoB.add(new Numero(0, -10, 450, 250, null, this));
        numerosProcesoB.add(new Numero(1, -20, 450, 280, null, this));
        numerosProcesoB.add(new Numero(2, 3, 450, 310, null, this));
        numerosProcesoB.add(new Numero(3, 4, 450, 340, null, this));
        numerosProcesoB.add(new Numero(4, -21, 450, 370, null, this));

    }

    Thread moverNumero = new Thread(() -> {
        while (true) {
            try {
                System.out.println("Moviendo numero");
                numerosProcesoA.get(0).avanzar();
                Thread.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    });

    @Override
    public void run() {
        generarNumeroProcesoA();
        generarNumeroProcesoB();
        moverNumero.start();
        System.out.println("Se acaba de escribir los numeros ");

    }

}
